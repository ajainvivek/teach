{
  "roomId": "123",
  "id": 1,
  "slideTemplate": "url",
  "title": "Title",
  "snapshotImg": "url",
  "theme": "default",
  "author": "Ajain Vivek",
  "slides": [
    {
      "id": "122",
      "seqNo": 1,
      "type": "info",
      "content": "<h2>ES6 Zombie Attack</h2><h4>Introduction to ES6 basics</h4><br /><img src=\"https://media.giphy.com/media/1FFICJRp8QQb6/giphy.gif\"/>"
    },
    {
      "id": "123",
      "seqNo": 2,
      "type": "info",
      "content": "<h2>Zombie Attack Agenda ?</h2> <p> <ul> <li class=\"fragment\">let, const & block scope</li><li class=\"fragment\">Arrow Functions</li><li class=\"fragment\">Template Literals</li></ul> </p>"
    },
    {
      "id": "124",
      "seqNo": 3,
      "type": "info",
      "isCurrentQs": false,
      "content": "<p><b>'let'</b> allows you to declare variables that are limited in scope to the block, statement, or expression on which it is used.</p></br><p><b>'Constants'</b> are block-scoped, much like variables defined using the let statement. The value of a constant cannot change through re-assignment, and it can't be redeclared.</p>"
    },
    {
      "id": "125",
      "seqNo": 4,
      "type": "info",
      "isCurrentQs": false,
      "content": "<h3>Zombie Time</h3><p>You will be fired up with questions. Choose the answer within 45 seconds. <br><br><br> Ninja's, Let's get rolling!!!. </p>"
    },
    {
      "id": "126",
      "seqNo": 5,
      "type": "qs",
      "isCurrentQs": false,
      "contentTypeScript": true,
      "content": "<h4>Zombie Time</h4><pre><code>'use strict'; \n console.log(zombie); \n var zombie = 'visible';</code></pre>",
      "qs": {
        "id": "126",
        "type": "single",
        "title": "What will logger print ?",
        "options": [
          {
            "id": "1",
            "value": "visible"
          },
          {
            "id": "2",
            "value": "undefined"
          },
          {
            "id": "3",
            "value": "''"
          },
          {
            "id": "4",
            "value": "Reference Error: zombie not defined"
          }
        ],
        "answer": [
          "2"
        ],
        "chart": "bar",
        "responses": [],
        "timeout": 45,
        "isCompleted": true
      }
    },
    {
      "id": "127",
      "seqNo": 6,
      "type": "qs",
      "isCurrentQs": false,
      "contentTypeScript": true,
      "content": "<h4>Zombie Time</h4><pre><code>'use strict'; \n console.log(zombie); \n let zombie = 'visible';</code></pre>",
      "qs": {
        "id": "127",
        "type": "single",
        "title": "What will logger print ?",
        "options": [
          {
            "id": "1",
            "value": "visible"
          },
          {
            "id": "2",
            "value": "undefined"
          },
          {
            "id": "3",
            "value": "''"
          },
          {
            "id": "4",
            "value": "Reference Error: zombie not defined"
          }
        ],
        "answer": [
          "4"
        ],
        "chart": "bar",
        "responses": [],
        "timeout": 45,
        "isCompleted": true
      }
    },
    {
      "id": "128",
      "seqNo": 7,
      "type": "info",
      "content": "<img src='https://media.giphy.com/media/WMgXdYifGXKg/giphy.gif' />"
    },
    {
      "id": "129",
      "seqNo": 8,
      "type": "qs",
      "isCurrentQs": false,
      "contentTypeScript": true,
      "content": "<h4>Zombie Time</h4><pre><code>'use strict'; \n let zombie = 'visible'; \n console.log(zombie);</code></pre>",
      "qs": {
        "id": "129",
        "type": "single",
        "title": "What will logger print ?",
        "options": [
          {
            "id": "1",
            "value": "visible"
          },
          {
            "id": "2",
            "value": "undefined"
          },
          {
            "id": "3",
            "value": "''"
          },
          {
            "id": "4",
            "value": "Reference Error: zombie not defined"
          }
        ],
        "answer": [
          "2"
        ],
        "chart": "bar",
        "responses": [],
        "timeout": 45,
        "isCompleted": true
      }
    },
    {
      "id": "130",
      "seqNo": 9,
      "type": "info",
      "content": "<img src='https://media.giphy.com/media/xTiTnyijMsXgn6Bzzy/giphy.gif' />"
    },
    {
      "id": "131",
      "seqNo": 10,
      "type": "qs",
      "isCurrentQs": false,
      "contentTypeScript": true,
      "content": "<h4>Zombie Time</h4><pre><code>'use strict'; \n for (var i = 0; i < 5; i++) { \n  window.setTimeout(function () { \n    console.log(i); \n  }, 1000); \n } </code></pre>",
      "qs": {
        "id": "131",
        "type": "single",
        "title": "What will logger print ?",
        "options": [
          {
            "id": "1",
            "value": "5, 5, 5, 5, 5"
          },
          {
            "id": "2",
            "value": "0, 1, 2, 3, 4"
          },
          {
            "id": "3",
            "value": "undefined, undefined, undefined, undefined, undefined"
          },
          {
            "id": "4",
            "value": "4, 4, 4, 4, 4"
          }
        ],
        "answer": [
          "1"
        ],
        "chart": "bar",
        "responses": [],
        "timeout": 45,
        "isCompleted": true
      }
    },
    {
      "id": "132",
      "seqNo": 11,
      "type": "qs",
      "isCurrentQs": false,
      "contentTypeScript": true,
      "content": "<h4>Zombie Time</h4><pre><code>'use strict'; \n for (let i = 0; i < 5; i++) { \n  window.setTimeout(function () { \n    console.log(i); \n  }, 1000); \n } </code></pre>",
      "qs": {
        "id": "132",
        "type": "single",
        "title": "What will logger print ?",
        "options": [
          {
            "id": "1",
            "value": "5, 5, 5, 5, 5"
          },
          {
            "id": "2",
            "value": "0, 1, 2, 3, 4"
          },
          {
            "id": "3",
            "value": "undefined, undefined, undefined, undefined, undefined"
          },
          {
            "id": "4",
            "value": "4, 4, 4, 4, 4"
          }
        ],
        "answer": [
          "2"
        ],
        "chart": "bar",
        "responses": [],
        "timeout": 45,
        "isCompleted": true
      }
    },
    {
      "id": "133",
      "seqNo": 11,
      "type": "qs",
      "isCurrentQs": false,
      "contentTypeScript": true,
      "content": "<h4>Zombie Time</h4><pre><code>'use strict'; \n //Set Zombie Health \n const ZOMBIE_FULL_HEALTH = 100; \n console.log(ZOMBIE_FULL_HEALTH); \n //Set Human Health \n const HUMAN_FULL_HEALTH = 100; \n HUMAN_FULL_HEALTH = 50; \n console.log(HUMAN_FULL_HEALTH);</code></pre>",
      "qs": {
        "id": "133",
        "type": "single",
        "title": "What will logger print ?",
        "options": [
          {
            "id": "1",
            "value": "100, 50"
          },
          {
            "id": "2",
            "value": "100, Type Error: Assignment to constant variable"
          },
          {
            "id": "3",
            "value": "100, undefined"
          },
          {
            "id": "4",
            "value": "100, null"
          }
        ],
        "answer": [
          "2"
        ],
        "chart": "bar",
        "responses": [],
        "timeout": 45,
        "isCompleted": true
      }
    },
    {
      "id": "134",
      "seqNo": 12,
      "type": "info",
      "content": "<img src='https://media.giphy.com/media/3osxY8IFA7gskpX0ME/giphy.gif' />"
    },
    {
      "id": "135",
      "seqNo": 13,
      "type": "info",
      "content": "<h2>Fat Arrow Functions (=>) </h2> <p> <ul> <li class=\"fragment\"><b>'Lexical this binding'</b> – The value of this inside of the function is determined by where the arrow function is defined not where it is used.</li><li class=\"fragment\"><b>'Not newable'</b> – Arrow functions cannot be used a constructors and will throw an error when used with new.</li><li class=\"fragment\"><b>'Can’t change this'</b> – The value of this inside of the function can’t be changed, it remains the same value throughout the entire lifecycle of the function.</li></p>"
    },
    {
      "id": "136",
      "seqNo": 14,
      "type": "qs",
      "isCurrentQs": false,
      "contentTypeScript": true,
      "content": "<h4>Zombie Time</h4><pre><code>'use strict'; \n var getZombieCount = () => 100; \n console.log(typeof getZombieCount, getZombieCount());</code></pre>",
      "qs": {
        "id": "136",
        "type": "single",
        "title": "What will logger print ?",
        "options": [
          {
            "id": "1",
            "value": "'function', 5"
          },
          {
            "id": "2",
            "value": "'number', Type Error: Assignment to constant variable"
          },
          {
            "id": "3",
            "value": "'number', 5"
          },
          {
            "id": "4",
            "value": "'string', 5"
          }
        ],
        "answer": [
          "1"
        ],
        "chart": "bar",
        "responses": [],
        "timeout": 45,
        "isCompleted": true
      }
    },
    {
      "id": "137",
      "seqNo": 15,
      "type": "info",
      "content": "<img src='https://m.popkey.co/be3f52/6aGb_f-maxage-0.gif' />"
    },
    {
      "id": "138",
      "seqNo": 16,
      "type": "qs",
      "isCurrentQs": false,
      "contentTypeScript": true,
      "content": "<h4>Zombie Time</h4><pre><code>'use strict'; \n var getZombieCount = count => count * 2; \n console.log(getZombieCount(2));</code></pre>",
      "qs": {
        "id": "138",
        "type": "single",
        "title": "What will logger print ?",
        "options": [
          {
            "id": "1",
            "value": "4"
          },
          {
            "id": "2",
            "value": "undefined"
          },
          {
            "id": "3",
            "value": "8"
          },
          {
            "id": "4",
            "value": "2"
          }
        ],
        "answer": [
          "3"
        ],
        "chart": "bar",
        "responses": [],
        "timeout": 45,
        "isCompleted": true
      }
    },
    {
      "id": "139",
      "seqNo": 17,
      "type": "qs",
      "isCurrentQs": false,
      "contentTypeScript": true,
      "content": "<h4>Zombie Time</h4><pre><code>'use strict'; \n var getZombieCount = (alive, dead) => {; \n var count = alive + dead; \n return count; \n } \n console.log(getZombieCount(4, 2));</code></pre>",
      "qs": {
        "id": "139",
        "type": "single",
        "title": "What will logger print ?",
        "options": [
          {
            "id": "1",
            "value": "4"
          },
          {
            "id": "2",
            "value": "undefined"
          },
          {
            "id": "3",
            "value": "8"
          },
          {
            "id": "4",
            "value": "6"
          }
        ],
        "answer": [
          "4"
        ],
        "chart": "bar",
        "responses": [],
        "timeout": 45,
        "isCompleted": true
      }
    },
    {
      "id": "140",
      "seqNo": 17,
      "type": "qs",
      "isCurrentQs": false,
      "contentTypeScript": true,
      "content": "<h4>Zombie Time</h4><pre><code>'use strict'; \n document.addEventListener('click', function () { \n console.log(this) \n }) \n document.addEventListener('click', () => console.log(this));</code></pre>",
      "qs": {
        "id": "140",
        "type": "single",
        "title": "What will logger print ?",
        "options": [
          {
            "id": "1",
            "value": "#document, #document"
          },
          {
            "id": "2",
            "value": "#document, #window"
          },
          {
            "id": "3",
            "value": "#window, #window"
          },
          {
            "id": "4",
            "value": "#document, undefined"
          }
        ],
        "answer": [
          "2"
        ],
        "chart": "bar",
        "responses": [],
        "timeout": 45,
        "isCompleted": true
      }
    },
    {
      "id": "141",
      "seqNo": 18,
      "type": "qs",
      "isCurrentQs": false,
      "contentTypeScript": true,
      "content": "<h4>Zombie Time</h4><pre><code>'use strict'; \n var getZombieCount = () \n => 2; \n console.log(getZombieCount(2));</code></pre>",
      "qs": {
        "id": "141",
        "type": "single",
        "title": "What will logger print ?",
        "options": [
          {
            "id": "1",
            "value": "Syntax Error unexpected token"
          },
          {
            "id": "2",
            "value": "2"
          },
          {
            "id": "3",
            "value": "undefined"
          },
          {
            "id": "4",
            "value": "Reference Error"
          }
        ],
        "answer": [
          "1"
        ],
        "chart": "bar",
        "responses": [],
        "timeout": 45,
        "isCompleted": true
      }
    },
    {
      "id": "142",
      "seqNo": 19,
      "type": "info",
      "content": "<h2>Template Literals </h2>"
    },
    {
      "id": "143",
      "seqNo": 18,
      "type": "qs",
      "isCurrentQs": false,
      "contentTypeScript": true,
      "content": "<h4>Zombie Time</h4><pre><code>'use strict'; \n var killed = 20; \n console.log(Zombies Killed: ${killed}); </code></pre>",
      "qs": {
        "id": "143",
        "type": "single",
        "title": "What will logger print ?",
        "options": [
          {
            "id": "1",
            "value": "Syntax Error unexpected token"
          },
          {
            "id": "2",
            "value": "Zombies Killed: 20"
          },
          {
            "id": "3",
            "value": "Zombies Killed: undefined"
          },
          {
            "id": "4",
            "value": "Zombies Killed: ${killed}"
          }
        ],
        "answer": [
          "2"
        ],
        "chart": "bar",
        "responses": [],
        "timeout": 45,
        "isCompleted": true
      }
    },
    {
      "id": "144",
      "seqNo": 18,
      "type": "qs",
      "isCurrentQs": false,
      "contentTypeScript": true,
      "content": "<h4>Zombie Time</h4><pre><code>'use strict'; \n var killed = 20; \n console.log(Zombies Killed: \\${killed}); </code></pre>",
      "qs": {
        "id": "144",
        "type": "single",
        "title": "What will logger print ?",
        "options": [
          {
            "id": "1",
            "value": "Syntax Error unexpected token"
          },
          {
            "id": "2",
            "value": "Zombies Killed: 20"
          },
          {
            "id": "3",
            "value": "Zombies Killed: undefined"
          },
          {
            "id": "4",
            "value": "Zombies Killed: ${killed}"
          }
        ],
        "answer": [
          "4"
        ],
        "chart": "bar",
        "responses": [],
        "timeout": 45,
        "isCompleted": true
      }
    },
    {
      "id": "145",
      "seqNo": 18,
      "type": "qs",
      "isCurrentQs": false,
      "contentTypeScript": true,
      "content": "<h4>Zombie Time</h4><pre><code>'use strict'; \n var killed = 20; \n console.log(Zombies Killed: ${'Count:'killed}); </code></pre>",
      "qs": {
        "id": "145",
        "type": "single",
        "title": "What will logger print ?",
        "options": [
          {
            "id": "1",
            "value": "Syntax Error unexpected token"
          },
          {
            "id": "2",
            "value": "Zombies Killed: Count:20"
          },
          {
            "id": "3",
            "value": "Zombies Killed: undefined"
          },
          {
            "id": "4",
            "value": "Zombies Killed: ${Count:killed}"
          }
        ],
        "answer": [
          "2"
        ],
        "chart": "bar",
        "responses": [],
        "timeout": 45,
        "isCompleted": true
      }
    },
    {
      "id": "147",
      "seqNo": 15,
      "type": "info",
      "content": "<img src='https://media.giphy.com/media/QiroFHnxL6try/giphy.gif' />"
    }
  ],
  "users": []
}
